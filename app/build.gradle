plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'

    // Dependency Injection with Hilt
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'

    // Add the Google services Gradle plugin
    id 'com.google.gms.google-services'

    id 'kotlin-android'
}

android {
    namespace 'com.mohandass.botforge'
    compileSdk 33

    defaultConfig {
        applicationId "com.mohandass.botforge"
        minSdk 30
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.2.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    // Import the Compose BOM
    implementation platform('androidx.compose:compose-bom:2023.01.00')
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.ui:ui-tooling-preview"
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.material:material'
    debugImplementation "androidx.compose.ui:ui-tooling"
    debugImplementation "androidx.compose.ui:ui-test-manifest"

    def activity_version = "1.6.1"
    implementation "androidx.activity:activity-compose:$activity_version"

    def core_version = "1.9.0"
    implementation "androidx.core:core-ktx:$core_version"

    def lifecycle_version = "2.6.0"
    def arch_version = "2.1.0"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
//    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
//    implementation "androidx.lifecycle:lifecycle-runtime-compose:$lifecycle_version"


//    testImplementation 'junit:junit:4.13.2'
//    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
//    androidTestImplementation "androidx.compose.ui:ui-test-junit4"

    // Scale units as DH (Device Height) and DW (Device Width)
    implementation 'com.github.slaviboy:JetpackComposePercentageUnits:1.0.0'

    // Navigation
    implementation "androidx.navigation:navigation-compose:$nav_version"

    // Dependency Injection with Hilt
    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-android-compiler:2.44"

    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"

    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:31.2.3')

    // When using the BoM, you don't specify versions in Firebase library dependencies

    // Add the dependency for the Firebase SDK for Google Analytics
    implementation 'com.google.firebase:firebase-analytics-ktx'

    implementation "com.google.firebase:firebase-auth-ktx"
    implementation "com.google.firebase:firebase-firestore-ktx"

    // Room
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    // To use Kotlin annotation processing tool (kapt)
    kapt "androidx.room:room-compiler:$room_version"

    // LiveData
    implementation("androidx.compose.runtime:runtime-livedata:1.3.3")

    // DataStore Preferences
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    def openai_kotlin_version = "3.1.0"
    // import Kotlin API client BOM
    implementation platform("com.aallam.openai:openai-client-bom:$openai_kotlin_version")

    // define dependencies without versions
    implementation 'com.aallam.openai:openai-client'
    implementation 'io.ktor:ktor-client-okhttp'

    // gson
    implementation 'com.google.code.gson:gson:2.10.1'
}

// Dependency Injection with Hilt
// Allow references to generated code
kapt {
    correctErrorTypes true
}
